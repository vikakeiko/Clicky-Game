{"ast":null,"code":"var _jsxFileName = \"/Users/keiko/Desktop/homework/Clicky-Game/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Jumbotron from './components/layout/jumbotron';\nimport Card from \"./components/ClickCard/Click\";\nimport ScoreBoard from \"./components/ScoreBoard/scoreboard\";\nimport city from \"./city.json\";\nimport \"./App.css\";\nimport Container from './components/Container';\nimport CardList from './components/CardList';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Card,\n      isClicked: [],\n      score: 0,\n      remaining: 9\n    };\n\n    this.handleClick = id => {\n      if (this.state.score === 9) {\n        alert(\"YOU WIN!!\");\n        this.resetGame();\n      } else if (this.state.clicked.includes(id)) {\n        alert(\"YOU LOST!!\");\n        this.resetGame();\n      } else {\n        this.state.isClicked.push(id);\n        this.setState({\n          card: this.shuffleArray(this.state.card),\n          score: this.state.score + 1,\n          remaining: this.state.remaining - 1\n        });\n      }\n    };\n\n    this.resetGame = () => {\n      this.setState({\n        isClicked: [],\n        score: 0,\n        remaining: 9\n      });\n    };\n  }\n\n  // algorithm \n  shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      var _ref = [array[j], array[i]];\n      array[i] = _ref[0];\n      array[j] = _ref[1];\n    }\n\n    ;\n    return array;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(ScoreBoard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Clicky Game!\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Click on an image to earn points but do not click on any more than once!\")), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, city.map(city => React.createElement(Card, {\n      key: city.id,\n      name: city.name,\n      id: city.id,\n      image: city.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/keiko/Desktop/homework/Clicky-Game/src/App.js"],"names":["React","Jumbotron","Card","ScoreBoard","city","Container","CardList","App","Component","state","isClicked","score","remaining","handleClick","id","alert","resetGame","clicked","includes","push","setState","card","shuffleArray","array","i","length","j","Math","floor","random","render","map","name","image"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Jumbotron from './components/layout/jumbotron';\nimport Card from \"./components/ClickCard/Click\";\nimport ScoreBoard from \"./components/ScoreBoard/scoreboard\";\nimport city from \"./city.json\";\nimport \"./App.css\";\nimport Container from './components/Container';\nimport CardList from './components/CardList';\n\n\nexport default class App extends React.Component {\n  state = {\n    Card,\n    isClicked: [],\n    score: 0,\n    remaining: 9 \n  };\n\n  // algorithm \n  shuffleArray(array){\n    for(let i = array.length - 1; i > 0; i--){\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    };\n    return array; \n  };\n\n  // clicked logic function\n  // if clicked, add to clicked array. if it is already in array => lose game\n  handleClick = (id) => {\n    if (this.state.score === 9) {\n      alert(\"YOU WIN!!\");\n      this.resetGame();\n    } else if (this.state.clicked.includes(id)) {\n      alert(\"YOU LOST!!\");\n      this.resetGame();\n    } else {\n      this.state.isClicked.push(id);\n      this.setState({\n        card: this.shuffleArray(this.state.card),\n        score: this.state.score + 1, \n        remaining: this.state.remaining - 1\n      });\n    }\n  };\n\n  resetGame = () => {\n    this.setState({\n      isClicked: [],\n      score: 0,\n      remaining: 9\n    });\n  };\n\n\n\n\n\n  render() {\n\n    return (\n      <div>\n        <ScoreBoard />\n        <Jumbotron>\n          <h1 class=\"header\">Clicky Game!</h1>\n          <h2>Click on an image to earn points but do not click on any more than once!</h2>\n        </Jumbotron>\n        <Container>\n          <CardList>\n            {city.map(city => (\n              <Card\n                key={city.id}\n                name={city.name}\n                id={city.id}\n                image={city.image}\n              />\n            ))}\n          </CardList>\n        </Container>\n\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}